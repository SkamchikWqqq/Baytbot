from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import CommandStart
from aiogram.utils.exceptions import TelegramForbiddenError, TelegramAPIError
import asyncio

# üîπ –¢–≤–æ–π —Ç–æ–∫–µ–Ω
TOKEN = "7917190360:AAFxfFYsEsx9kQiPbh7MtZ6N7HLZcSPQRNs"

# üîπ –°—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã
CHANNELS = [
    "https://t.me/+yO5vZ2dUyRE3MzM0",
    "https://t.me/faicers"
]

bot = Bot(token=TOKEN)
dp = Dispatcher()


@dp.message(CommandStart())
async def start_cmd(message: types.Message):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 1", url=CHANNELS[0])],
            [InlineKeyboardButton(text="üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 2", url=CHANNELS[1])],
            [InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subs")]
        ]
    )
    try:
        await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã –Ω–∏–∂–µ:", reply_markup=keyboard)
    except TelegramForbiddenError:
        print(f"[!] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")
    except TelegramAPIError as e:
        print(f"[–û—à–∏–±–∫–∞ Telegram API]: {e}")


@dp.callback_query(lambda c: c.data == "check_subs")
async def check_subs(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    subscribed_all = True

    for channel in CHANNELS:
        try:
            chat = await bot.get_chat(channel)
            member = await bot.get_chat_member(chat.id, user_id)
            if member.status == "left":
                subscribed_all = False
        except TelegramForbiddenError:
            print(f"[!] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")
            return
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏]: {e}")
            subscribed_all = False

    try:
        if subscribed_all:
            await callback.message.answer("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã.")
        else:
            await callback.message.answer("‚ùå –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")
    except TelegramForbiddenError:
        print(f"[!] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")
    except TelegramAPIError as e:
        print(f"[–û—à–∏–±–∫–∞ Telegram API]: {e}")


# üîπ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –≤—ã–ª–µ—Ç–∞–ª
@dp.errors_handler()
async def global_error_handler(update, exception):
    print(f"[GLOBAL ERROR] {exception}")
    return True  # –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫—É –±–æ—Ç–∞


async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
    
